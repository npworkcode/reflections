How did viewing a diff between two versions of a file help you see the bug that
was introduced?

The FC command in windows showed the difference between the two files.
I was able to scroll up and down and see the differences between the two files,
line by line. By looking at each line and the differences, I was able to spot the
error.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Easy access will allow me to look at the previous mistakes that I have made and help me to learn
	from those mistakes and become a better and more efficient programmer.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros Can choose to commit when there is a logical change in the code.
	The commit size will not be too big or too small.
	
	Cons If automatically saved, don't have to worry about when to save. Code is always saved automatically.
	Can have a lot of irrelevant saves or code may not work.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    The files are logically connected in some way. Especially if the changes in
	one file will affect the code in another.
	Google Docs, retrieves and reads a file one at a time. As far as the systems
	is concerned. Two files are not related, therefore is not designed to save
	two related files.

How can you use the commands git log and git diff to view the history of files?

    git log will display all the commits made to the repository sorted by date
	git diff id1 id2 display the difference between two commits, the + green lines show all the lines added
	and the - red lines show all the lines deleted.

How might using version control make you more confident to make changes that
could break something?

    Git allows me to check in my code when I have made logical changes to it. This means I 
	can experiment with various changes and still go back to a previous version if necessary.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to upload all my projects to GitHub
	
	
Run code --help from command line for help, if does not show
Add c:\MSVisualCode\bin to path
git config --global core.editor "code --wait"
git config --global -each
[diff]
	tool = default-difftool
[difftool "default-difftool"]
	cmd = code --wait --diff $LOCAL $REMOTE